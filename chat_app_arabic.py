import streamlit as st
from PIL import Image
from shared.config import init_apis
from shared.database import search_by_text, search_by_image
from shared.embeddings import expand_search_query, parse_query_expansion

# Page config
st.set_page_config(
    page_title="ูุณุงุนุฏ ูุชุฌุฑ ุงููุฌููุฑุงุช",
    page_icon="๐",
    layout="wide"
)

st.title("๐ ูุณุงุนุฏ ูุชุฌุฑ ุงููุฌููุฑุงุช")
st.subheader("ุงุจุญุซ ุนู ุงููุฌููุฑุงุช ุงููุซุงููุฉ ูู")

# Initialize APIs
try:
    openai_client, pinecone_index = init_apis()
except Exception as e:
    st.error(f"ุฎุทุฃ ูู ุงูุงุชุตุงู: {e}")
    st.stop()

# Main search interface
st.markdown("### ููู ูููููู ูุณุงุนุฏุชู ุงููููุ")

# Two columns for different search methods
col1, col2 = st.columns(2)

with col1:
    st.markdown("#### ๐ ุงูุจุญุซ ุจุงููุต")
    search_query = st.text_input(
        "ุตู ูุง ุชุจุญุซ ุนูู:",
        placeholder="ูุซุงู: ููุงุฏุฉ ุฐูุจูุฉ ุจุดูู ุงููุงุณูููุ ุฎุงุชู ูุถู ุจุณูุท..."
    )
    
    if st.button("๐ ุงุจุญุซ ุจุงููุต", type="primary"):
        if search_query:
            with st.spinner("ุงูุจุญุซ ุนู ุงูููุชุฌุงุช..."):
                # Expand the query
                expansion = expand_search_query(search_query)
                parsed = parse_query_expansion(expansion)
                
                # Show what we're searching for
                st.info(f"๐ ุงูุจุญุซ ุนู: {parsed['primary']}")
                if parsed['related']:
                    st.write(f"**ูุตุทูุญุงุช ุฐุงุช ุตูุฉ:** {', '.join(parsed['related'])}")
                
                # Search using expanded query
                all_terms = [parsed['primary']] + parsed['related']
                search_text = ' '.join(all_terms)
                
                results = search_by_text(pinecone_index, search_text, top_k=8)
                
                if results:
                    st.success(f"โ ุชู ุงูุนุซูุฑ ุนูู {len(results)} ููุชุฌ")
                    
                    # Display results
                    cols = st.columns(2)
                    for idx, result in enumerate(results):
                        with cols[idx % 2]:
                            metadata = result.metadata
                            
                            # Product card
                            st.markdown("---")
                            st.subheader(metadata.get('name', 'ููุชุฌ'))
                            st.write(f"**๐ฐ ุงูุณุนุฑ:** {metadata.get('price', 0):.2f} ุฑูุงู")
                            st.write(f"**๐ ุงููุฆุฉ:** {metadata.get('category', 'ุบูุฑ ูุญุฏุฏ')}")
                            
                            # Description
                            description = metadata.get('description', '')
                            if len(description) > 150:
                                description = description[:150] + "..."
                            st.write(f"**๐ ุงููุตู:** {description}")
                            
                            # Match score
                            match_percentage = result.score * 100
                            st.write(f"**๐ฏ ุฏุฑุฌุฉ ุงูุชุทุงุจู:** {match_percentage:.1f}%")
                            
                            # Add to cart button (placeholder)
                            if st.button(f"๐ ุฃุถู ููุณูุฉ", key=f"cart_{result.id}"):
                                st.success("ุชู ุฅุถุงูุฉ ุงูููุชุฌ ููุณูุฉ! ๐๏ธ")
                else:
                    st.warning("ูู ูุชู ุงูุนุซูุฑ ุนูู ููุชุฌุงุช ูุทุงุจูุฉ. ุฌุฑุจ ูุตุทูุญุงุช ุจุญุซ ูุฎุชููุฉ.")

with col2:
    st.markdown("#### ๐ธ ุงูุจุญุซ ุจุงูุตูุฑุฉ")
    uploaded_image = st.file_uploader(
        "ุงุฑูุน ุตูุฑุฉ ููุชุฌ ูุดุงุจู:",
        type=['png', 'jpg', 'jpeg'],
        help="ุงุฑูุน ุตูุฑุฉ ููุทุนุฉ ูุฌููุฑุงุช ุชุฑูุฏ ุงูุนุซูุฑ ุนูู ุดูุก ูุดุงุจู ููุง"
    )
    
    if uploaded_image:
        # Display uploaded image
        image = Image.open(uploaded_image)
        st.image(image, caption="ุงูุตูุฑุฉ ุงููุฑููุนุฉ", use_container_width=True)
        
        if st.button("๐ ุงุจุญุซ ุจุงูุตูุฑุฉ", type="primary"):
            with st.spinner("ุชุญููู ุงูุตูุฑุฉ ูุงูุจุญุซ..."):
                # Search by image
                results = search_by_image(pinecone_index, image, top_k=6)
                
                if results:
                    st.success(f"โ ุชู ุงูุนุซูุฑ ุนูู {len(results)} ููุชุฌ ูุดุงุจู")
                    
                    # Display results in grid
                    for idx, result in enumerate(results):
                        metadata = result.metadata
                        
                        # Product card
                        st.markdown("---")
                        st.subheader(metadata.get('name', 'ููุชุฌ'))
                        st.write(f"**๐ฐ ุงูุณุนุฑ:** {metadata.get('price', 0):.2f} ุฑูุงู")
                        st.write(f"**๐ ุงููุฆุฉ:** {metadata.get('category', 'ุบูุฑ ูุญุฏุฏ')}")
                        
                        # Description (shorter for image results)
                        description = metadata.get('description', '')
                        if len(description) > 100:
                            description = description[:100] + "..."
                        st.write(f"**๐ ุงููุตู:** {description}")
                        
                        # Match score
                        match_percentage = result.score * 100
                        st.write(f"**๐ฏ ุฏุฑุฌุฉ ุงูุชุดุงุจู:** {match_percentage:.1f}%")
                        
                        # Add to cart button
                        if st.button(f"๐ ุฃุถู ููุณูุฉ", key=f"img_cart_{result.id}"):
                            st.success("ุชู ุฅุถุงูุฉ ุงูููุชุฌ ููุณูุฉ! ๐๏ธ")
                else:
                    st.warning("ูู ูุชู ุงูุนุซูุฑ ุนูู ููุชุฌุงุช ูุดุงุจูุฉ. ุฌุฑุจ ุตูุฑุฉ ุฃุฎุฑู.")

# Sidebar with helpful tips
st.sidebar.title("๐ก ูุตุงุฆุญ ููุจุญุซ")
st.sidebar.markdown("""
**ููุจุญุซ ุงูุฃูุถู:**
- ุงุณุชุฎุฏู ุฃูุตุงู ูุงุถุญุฉ (ูุซู: "ุฎุงุชู ุฐูุจู")
- ุงุฐูุฑ ุงูุดูู ุฃู ุงูุชุตููู (ูุซู: "ุจุดูู ุงููุงุณููู")
- ุงุฐูุฑ ุงููุงุฏุฉ (ุฐูุจุ ูุถุฉุ ูุงุณ)
- ุงุฐูุฑ ุงูููุงุณุจุฉ (ุฒูุงุฌุ ุฎุทูุจุฉุ ูููู)

**ุฃูุซูุฉ ุจุญุซ ุฌูุฏุฉ:**
- ููุงุฏุฉ ูุถูุฉ ุจุชุตููู ุงูุฃุฒูุงุฑ
- ุฎุงุชู ุฎุทูุจุฉ ุจุญุฌุฑ ุงููุงุณ
- ุฃูุฑุงุท ุฐูุจูุฉ ููููุงุณุจุงุช
- ุฃุณุงูุฑ ุจุณูุทุฉ ููุงุณุชุฎุฏุงู ุงููููู
""")

st.sidebar.markdown("---")
st.sidebar.markdown("**๐๏ธ ุณูุฉ ุงูุชุณูู**")
st.sidebar.write("ุงูุนูุงุตุฑ ุงููุญุฏุฏุฉ: 0")
st.sidebar.button("ุนุฑุถ ุงูุณูุฉ")

# Footer
st.markdown("---")
st.markdown(
    """
    <div style='text-align: center; color: gray;'>
    ๐ ูุณุงุนุฏ ูุชุฌุฑ ุงููุฌููุฑุงุช - ูุฏุนูู ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู
    </div>
    """, 
    unsafe_allow_html=True
)